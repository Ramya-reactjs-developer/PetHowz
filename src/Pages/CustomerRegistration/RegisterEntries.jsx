export const RegisterEntries = [
  {
    isFileUploader: true,
    name: "image",
    label: "Add Photos",
    breakpoint: 12,
    customClass: "uploadImageContainer",
    validation: { required: true },
    requiredField: true,
    error_message: "Upload Image",
  },
  {
    isTextInput: true,
    name: "name",
    label: "Name",
    placeholder: "Enter Name",
    breakpoint: 6,
    validation: { required: true },
    pattern: /^([a-z0-9])(\w)+([a-z0-9])$/i,
    requiredField: true,
    customClass: "textBox",
    error_message: "Is Invalid Format",
    validation_error_message: "Text is in Invalid format",
  },

  {
    isRadioAction: true,
    name: "gender",

    label: "Gender",
    breakpoint: 6,
    radioButtonData: [{ name: "Male" }, { name: "Female" }, { name: "Others" }],
    validation: { required: true },
    requiredField: true,
    error_message: "Is Invalid Format",
  },
  {
    isTextInput: true,
    type: "email",
    name: "email",
    label: "Email",
    placeholder: "Enter Name",
    breakpoint: 6,
    validation: { required: true },
    pattern: /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/,
    requiredField: true,
    customClass: "textBox",
    error_message: "Is Invalid Format",
    validation_error_message: "Text is in Invalid format",
  },
  {
    isTextInput: true,
    name: "mobile_number",
    type: "number",
    label: "Mobile Number",
    breakpoint: 6,
    validation: { required: true },
    pattern: /^(\+\d{1,3}[- ]?)?\d{10}$/,
    requiredField: true,
    customClass: "textBox",
    validation_error_message: "Text is in Invalid format",
    error_message: "Is Invalid Format",
  },
  {
    isPasswordInput1: true,
    name: "password",
    label: "Password",
    type: "password",
    breakpoint: 6,
    validation: { required: true },
    requiredField: true,
    pattern: /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/,
    validators: {
      required: true,
    },
    validation_error_message: "Text is in Invalid format",
    error_message:
      "is should contain at least 8 characters including at least 1 special character and 1 number",
  },
  {
    isPasswordInput2: true,
    breakpoint: 6,
    name: "confirmPassword",
    label: "Confirm Password",
    type: "password",
    requiredField: true,
    validation: { required: true },
    validation: {
      required: true,
    },
  },
];

export const DefaultRegisterEntriesValues = {
  image: "",
  name: "",
  mobile_number: "",
  gender: "",
  email: "",
  password: "",
  confirmPassword: "",
  submit_button: "",
};
